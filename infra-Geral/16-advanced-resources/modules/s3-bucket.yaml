AWSTemplateFormatVersion: 2010-09-09
Description: Create a S3 bucket that follows MyCompany's standards
Parameters:
  KMSKeyAlias:
    Description: >-
      The alias for your KMS key. If you will leave this field empty KMS key
      alias won't be created along the key.
    Type: String
    AllowedPattern: '^(?!aws)([a-zA-Z0-9\-\_\/]){1,32}$|^$'
    MinLength: 0
    MaxLength: 32
    ConstraintDescription: >-
      KMS key alias must be at least 1 and no more than 32 characters long, can
      contain lowercase and uppercase letters, numbers, hyphens, underscores and
      forward slashes and cannot begin with aws.
  ReadOnlyArn:
    Description: >-
      Provide ARN of an existing Principal (role) that will be granted with read
      only access to the S3 bucket (e.g.
      'arn:aws:iam::123456789xxx:role/myS3ROrole'). If not specified, access
      will be granted to current AWS account:root only. CF deployment will fail
      and rollback for non-existing ARN.
    Type: String
    Default: ''
    AllowedPattern: >-
      ^(arn:aws:iam::\d{12}:role(\/|\/[\w\!\"\#\$\%\'\(\)\*\+\,\-\.\/\:\;\<\=\>\?\@\[\\\]\^\`\{\|\}\~]{1,510}\/)[\w\+\=\,\.\@\-]{1,64})$|^$
    ConstraintDescription: >-
      IAM role ARN must start with arn:aws:iam::<12-digit AWS account
      number>:role/[<path>/]<name of role>. The name of role must be at least 1
      and no more than 64 characters long, can contain lowercase letters,
      uppercase letters, numbers, plus (+), equal (=), comma (,), period (.), at
      (@), underscore (_), and hyphen (-). Path is optional and must not exceed
      510 characters.
  ReadWriteArn:
    Description: >-
      Provide ARN of an existing Principal (role) that will be granted with read
      and write access to the S3 bucket (e.g.
      'arn:aws:iam::123456789xxx:role/myS3RWrole'). If not specified, access
      will be granted to current AWS account:root only. CF deployment will fail
      and rollback for non-existing ARN.
    Type: String
    Default: ''
    AllowedPattern: >-
      ^(arn:aws:iam::\d{12}:role(\/|\/[\w\!\"\#\$\%\'\(\)\*\+\,\-\.\/\:\;\<\=\>\?\@\[\\\]\^\`\{\|\}\~]{1,510}\/)[\w\+\=\,\.\@\-]{1,64})$|^$
    ConstraintDescription: >-
      IAM role ARN must start with arn:aws:iam::<12-digit AWS account
      number>:role/[<path>/]<name of role>. The name of role must be at least 1
      and no more than 64 characters long, can contain lowercase letters,
      uppercase letters, numbers, plus (+), equal (=), comma (,), period (.), at
      (@), underscore (_), and hyphen (-). Path is optional and must not exceed
      510 characters.

Resources:
  KmsKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: 'Give AWS account:root full control over the KMS key'
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - 'kms:*'
            Resource: '*'
          - Sid: 'Give ReadOnlyRole access to use KMS key for decryption'
            Effect: Allow
            Principal:
              AWS: !Ref ReadOnlyArn
            Action:
              - 'kms:Decrypt'
              - 'kms:DescribeKey'
            Resource: '*'
          - Sid: 'Give the ReadWriteRole access to use KMS key for encryption and decryption'
            Effect: Allow
            Principal:
              AWS: !Ref ReadWriteArn
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt'
              - 'kms:GenerateDataKey*'
              - 'kms:DescribeKey'
            Resource: '*'

  KmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub 'alias/${KMSKeyAlias}'
      TargetKeyId: !Ref KmsKey

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Ref KmsKey
              SSEAlgorithm: 'aws:kms'
      BucketName: !Sub '${AWS::StackName}-${AWS::AccountId}-${AWS::Region}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DenyIncorrectEncryptionHeader
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Sub 'arn:aws:s3:::${Bucket}/*'
            Condition:
              StringEquals:
                's3:x-amz-server-side-encryption': AES256
          - Sid: DenyPublicReadACL
            Effect: Deny
            Principal: '*'
            Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
            Resource: !Sub 'arn:aws:s3:::${Bucket}/*'
            Condition:
              StringEquals:
                's3:x-amz-acl':
                  - public-read
                  - public-read-write
                  - authenticated-read
          - Sid: DenyPublicReadGrant
            Effect: Deny
            Principal: '*'
            Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
            Resource: !Sub 'arn:aws:s3:::${Bucket}/*'
            Condition:
              StringLike:
                's3:x-amz-grant-read':
                  - '*http://acs.amazonaws.com/groups/global/AllUsers*'
                  - '*http://acs.amazonaws.com/groups/global/AuthenticatedUsers*'
          - Sid: DenyNonHttpsConnections
            Effect: Deny
            Principal: '*'
            Action:
              - 's3:PutObject'
              - 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${Bucket}/*'
            Condition:
              Bool:
                'aws:SecureTransport': false
          - Sid: 'Give ReadOnlyRole access to get objects from bucket and list bucket'
            Effect: Allow
            Principal:
              AWS: !Ref ReadOnlyArn
            Action:
              - 's3:GetObject'
              - 's3:GetObjectTagging'
              - 's3:ListBucket'
            Resource:
              - !Sub 'arn:aws:s3:::${Bucket}'
              - !Sub 'arn:aws:s3:::${Bucket}/*'
          - Sid: 'Give the ReadWriteRole access to get and put objects from and to bucket and list bucket and multipart uploads'
            Effect: Allow
            Principal:
              AWS: !Ref ReadWriteArn
            Action:
              - 's3:DeleteObject'
              - 's3:DeleteObjectTagging'
              - 's3:GetObject'
              - 's3:GetObjectTagging'
              - 's3:ListBucket'
              - 's3:PutObject'
              - 's3:PutObjectTagging'
            Resource:
              - !Sub 'arn:aws:s3:::${Bucket}'
              - !Sub 'arn:aws:s3:::${Bucket}/*'

Outputs:
  BucketArn:
    Description: ARN of the bucket created.
    Value: !GetAtt Bucket.Arn
  BucketName:
    Description: Name of the bucket created.
    Value: !Ref Bucket
  KmsKeyAlias:
    Description: Alias of SSE-KMS Customer Managed Key used to encrypt S3 bucket content.
    Value: !Ref KmsKeyAlias
  KmsKeyArn:
    Description: ARN of SSE-KMS Customer Managed Key used to encrypt S3 bucket content.
    Value: !GetAtt KmsKey.Arn
